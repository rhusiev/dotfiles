# perf-record
# Autogenerated from man page /usr/share/man/man1/perf-record.1.gz
complete -c perf-record -s e -l event -d 'Select the PMU event.  Selection can be: . sp'
complete -c perf-record -l filter -d 'Event filter.  This option should follow an event selector (-e)'
complete -c perf-record -l exclude-perf -d 'Don\'t record events issued by perf itself'
complete -c perf-record -s a -l all-cpus -d 'System-wide collection from all CPUs (default if no target is specified)'
complete -c perf-record -s p -l pid -d 'Record events on existing process ID (comma separated list)'
complete -c perf-record -s t -l tid -d 'Record events on existing thread ID (comma separated list)'
complete -c perf-record -s u -l uid -d 'Record events in threads owned by uid.  Name or number'
complete -c perf-record -s r -l realtime -d 'Collect data with this RT SCHED_FIFO priority'
complete -c perf-record -l no-buffering -d 'Collect data without buffering'
complete -c perf-record -s c -l count -d 'Event period to sample'
complete -c perf-record -s o -l output -d 'Output file name'
complete -c perf-record -s i -l no-inherit -d 'Child tasks do not inherit counters'
complete -c perf-record -s F -l freq -d 'Profile at this frequency'
complete -c perf-record -l strict-freq -d 'Fail if the specified frequency can\'t be used'
complete -c perf-record -s m -l mmap-pages -d 'Number of mmap data pages (must be a power of two) or size specification with…'
complete -c perf-record -s g -d 'Enables call-graph (stack chain/backtrace) recording for both kernel space an…'
complete -c perf-record -l call-graph -d 'Setup and enable call-graph (stack chain/backtrace) recording, implies -g'
complete -c perf-record -s q -l quiet -d 'Don\'t print any warnings or messages, useful for scripting'
complete -c perf-record -s v -l verbose -d 'Be more verbose (show counter open errors, etc)'
complete -c perf-record -s s -l stat -d 'Record per-thread event counts.  Use it with perf report -T to see the values'
complete -c perf-record -s d -l data -d 'Record the sample virtual addresses'
complete -c perf-record -l phys-data -d 'Record the sample physical addresses'
complete -c perf-record -l data-page-size -d 'Record the sampled data address data page size'
complete -c perf-record -l code-page-size -d 'Record the sampled code address (ip) page size'
complete -c perf-record -s T -l timestamp -d 'Record the sample timestamps'
complete -c perf-record -s P -l period -d 'Record the sample period'
complete -c perf-record -l sample-cpu -d 'Record the sample cpu'
complete -c perf-record -l sample-identifier -d 'Record the sample identifier i. e'
complete -c perf-record -s n -l no-samples -d 'Don\'t sample'
complete -c perf-record -s R -l raw-samples -d 'Collect raw sample records from all opened counters (default for tracepoint c…'
complete -c perf-record -s C -l cpu -d 'Collect samples only on the list of CPUs provided'
complete -c perf-record -s B -l no-buildid -d 'Do not save the build ids of binaries in the perf. data files'
complete -c perf-record -s N -l no-buildid-cache -d 'Do not update the buildid cache'
complete -c perf-record -s G -l cgroup -d 'monitor only in the container (cgroup) called "name"'
complete -c perf-record -s b -l branch-any -d 'Enable taken branch stack sampling.  Any type of taken branch may be sampled'
complete -c perf-record -s j -l branch-filter -d 'Enable taken branch stack sampling'
complete -c perf-record -s W -l weight -d 'Enable weightened sampling'
complete -c perf-record -l namespaces -d 'Record events of type PERF_RECORD_NAMESPACES'
complete -c perf-record -l all-cgroups -d 'Record events of type PERF_RECORD_CGROUP.  This enables cgroup sort key'
complete -c perf-record -l transaction -d 'Record transaction flags for transaction related events'
complete -c perf-record -l per-thread -d 'Use per-thread mmaps.  By default per-cpu mmaps are created'
complete -c perf-record -s D -l delay -d 'After starting the program, wait msecs before measuring (-1: start with event…'
complete -c perf-record -s I -l intr-regs -d 'Capture machine state (registers) at interrupt, i. e'
complete -c perf-record -l user-regs -d 'Similar to -I, but capture user registers at sample time'
complete -c perf-record -l running-time -d 'Record running and enabled time for read events (:S)'
complete -c perf-record -s k -l clockid -d 'Sets the clock id to use for the various time fields in the perf_event_type r…'
complete -c perf-record -s S -l snapshot -d 'Select AUX area tracing Snapshot Mode'
complete -c perf-record -l aux-sample -d 'Select AUX area sampling'
complete -c perf-record -l proc-map-timeout -d 'When processing pre-existing threads /proc/XXX/mmap, it may take a long time,…'
complete -c perf-record -l switch-events -d 'Record context switch events i. e'
complete -c perf-record -l vmlinux -d 'Specify vmlinux path which has debuginfo.  (enabled when BPF prologue is on)'
complete -c perf-record -l buildid-all -d 'Record build-id of all DSOs regardless whether it\'s actually hit or not'
complete -c perf-record -l buildid-mmap -d 'Record build ids in mmap2 events, disables build id cache (implies --no-build…'
complete -c perf-record -l aio -d 'Use <n> control blocks in asynchronous (Posix AIO) trace writing mode (defaul…'
complete -c perf-record -l affinity -d 'Set affinity mask of trace reading thread according to the policy defined by …'
complete -c perf-record -l mmap-flush -d 'Specify minimal number of bytes that is extracted from mmap data pages and pr…'
complete -c perf-record -s z -l compression-level -d 'Produce compressed trace using specified level n (default: 1 - fastest compre…'
complete -c perf-record -l all-kernel -d 'Configure all used events to run in kernel space'
complete -c perf-record -l all-user -d 'Configure all used events to run in user space'
complete -c perf-record -l kernel-callchains -d 'Collect callchains only from kernel space.  I. e'
complete -c perf-record -l user-callchains -d 'Collect callchains only from user space.  I. e'
complete -c perf-record -l timestamp-boundary -d 'Record timestamp boundary (time of first/last samples)'
complete -c perf-record -l switch-output -d 'Generate multiple perf'
complete -c perf-record -l switch-output-event -d 'Events that will cause the switch of the perf'
complete -c perf-record -l switch-max-files -d 'When rotating perf. data with --switch-output, only keep N files'
complete -c perf-record -l dry-run -d 'Parse options then exit'
complete -c perf-record -l synth -d 'Collect and synthesize given type of events (comma separated)'
complete -c perf-record -l tail-synthesize -d 'Instead of collecting non-sample events (for example, fork, comm, mmap) at th…'
complete -c perf-record -l overwrite -d 'Makes all events use an overwritable ring buffer'
complete -c perf-record -l kcore -d 'Make a copy of /proc/kcore and place it into a directory with the perf data f…'
complete -c perf-record -l max-size -d 'Limit the sample data max size, <size> is expected to be a number with append…'
complete -c perf-record -l num-thread-synthesize -d 'The number of threads to run when synthesizing events for existing processes'
complete -c perf-record -l control -l control -d 'ctl-fifo / ack-fifo are opened and used as ctl-fd / ack-fd as follows'
complete -c perf-record -l threads -d 'Write collected trace data into several data files using parallel threads'
complete -c perf-record -l debuginfod -d 'Specify debuginfod URL to be used when cacheing perf'
complete -c perf-record -l off-cpu -d 'Enable off-cpu profiling with BPF'
complete -c perf-record -l fomit-frame-pointer -d 'call graphs, using "dwarf", if available (perf tools linked to the libunwind …'
complete -c perf-record -l timestamp-filename
complete -c perf-record -l no-no-buildid -l no-no-buildid-cache
complete -c perf-record -l ---------------------------------------------------------- -d 'perf_event_attr:   size                             120   config             …'

