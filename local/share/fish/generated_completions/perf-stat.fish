# perf-stat
# Autogenerated from man page /usr/share/man/man1/perf-stat.1.gz
complete -c perf-stat -s e -l event -d 'Select the PMU event.  Selection can be: . sp'
complete -c perf-stat -s i -l no-inherit -d 'child tasks do not inherit counters'
complete -c perf-stat -s p -l pid -d 'stat events on existing process id (comma separated list)'
complete -c perf-stat -s t -l tid -d 'stat events on existing thread id (comma separated list)'
complete -c perf-stat -s b -l bpf-prog -d 'stat events on existing bpf program id (comma separated list), requiring root…'
complete -c perf-stat -l bpf-counters -d 'Use BPF programs to aggregate readings from perf_events'
complete -c perf-stat -l bpf-attr-map -d 'With option "--bpf-counters", different perf-stat sessions share information …'
complete -c perf-stat -s a -l all-cpus -d 'system-wide collection from all CPUs (default if no target is specified)'
complete -c perf-stat -l no-scale -d 'Don\'t scale/normalize counter values'
complete -c perf-stat -s d -l detailed -d 'print more detailed statistics, can be specified up to 3 times . sp '
complete -c perf-stat -s r -l repeat -d 'repeat command and print average + stddev (max: 100).  0 means forever'
complete -c perf-stat -s B -l big-num -d 'print large numbers with thousands\\*(Aq separators according to locale'
complete -c perf-stat -s C -l cpu -d 'Count only on the list of CPUs provided'
complete -c perf-stat -s A -l no-aggr -d 'Do not aggregate counts across all monitored CPUs'
complete -c perf-stat -s n -l null -d 'null run - Don\'t start any counters'
complete -c perf-stat -s v -l verbose -d 'be more verbose (show counter open errors, etc)'
complete -c perf-stat -s x -l field-separator -d 'print counts using a CSV-style output to make it easy to import directly into…'
complete -c perf-stat -l table -d 'Display time for each run (-r option), in a table format, e. g. : . sp '
complete -c perf-stat -s G -l cgroup -d 'monitor only in the container (cgroup) called "name"'
complete -c perf-stat -l for-each-cgroup -d 'Expand event list for each cgroup in "name" (allow multiple cgroups separated…'
complete -c perf-stat -s o -l output -d 'Print the output into the designated file'
complete -c perf-stat -l append -d 'Append to the output file designated with the -o option'
complete -c perf-stat -l log-fd -d 'Log output to fd, instead of stderr'
complete -c perf-stat -l control -l control -d 'ctl-fifo / ack-fifo are opened and used as ctl-fd / ack-fd as follows'
complete -c perf-stat -l pre -l post -d 'Pre and post measurement hooks, e. g. :'
complete -c perf-stat -s I -l interval-print -d 'Print count deltas every N milliseconds (minimum: 1ms) The overhead percentag…'
complete -c perf-stat -l interval-count -d 'Print count deltas for fixed number of times'
complete -c perf-stat -l interval-clear -d 'Clear the screen before next interval'
complete -c perf-stat -l timeout -d 'Stop the perf stat session and print count deltas after N milliseconds (minim…'
complete -c perf-stat -l metric-only -d 'Only print computed metrics.  Print them in a single line'
complete -c perf-stat -l per-socket -d 'Aggregate counts per processor socket for system-wide mode measurements'
complete -c perf-stat -l per-die -d 'Aggregate counts per processor die for system-wide mode measurements'
complete -c perf-stat -l per-cache -d 'Aggregate counts per cache instance for system-wide mode measurements'
complete -c perf-stat -l per-core -d 'Aggregate counts per physical processor for system-wide mode measurements'
complete -c perf-stat -l per-thread -d 'Aggregate counts per monitored threads, when monitoring threads (-t option) o…'
complete -c perf-stat -l per-node -d 'Aggregate counts per NUMA nodes for system-wide mode measurements'
complete -c perf-stat -s D -l delay -d 'After starting the program, wait msecs before measuring (-1: start with event…'
complete -c perf-stat -s T -l transaction -d 'Print statistics of transactional execution if supported'
complete -c perf-stat -l metric-no-group -d 'By default, events to compute a metric are placed in weak groups'
complete -c perf-stat -l metric-no-merge -d 'By default metric events in different weak groups can be shared if one group …'
complete -c perf-stat -l metric-no-threshold -d 'Metric thresholds may increase the number of events necessary to compute whet…'
complete -c perf-stat -l quiet -d 'Don\'t print output, warnings or messages'
complete -c perf-stat -l input
complete -c perf-stat -s M -l metrics
complete -c perf-stat -l no-merge
complete -c perf-stat -l hybrid-merge
complete -c perf-stat -l topdown
complete -c perf-stat -l td-level
complete -c perf-stat -l smi-cost
complete -c perf-stat -l all-kernel
complete -c perf-stat -l all-user
complete -c perf-stat -l percore-show-thread
complete -c perf-stat -l summary
complete -c perf-stat -l no-csv-summary
complete -c perf-stat -l cputype
complete -c perf-stat -l ---------------------------------------------------------- -d 'perf_event_attr:   size                             120   config             …'

