# cppcheck
# Autogenerated from man page /usr/share/man/man1/cppcheck.1.gz
complete -c cppcheck -l check-config -d 'Check Cppcheck configuration'
complete -c cppcheck -l check-library -d 'Show information messages when library files have incomplete info'
complete -c cppcheck -o 'D<id>' -d 'By default Cppcheck checks all configurations.  Use -D to limit the checking'
complete -c cppcheck -o 'U<id>' -d 'By default Cppcheck checks all configurations'
complete -c cppcheck -l disable -d 'Disable individual checks'
complete -c cppcheck -l error-exitcode -d 'If errors are found, integer <n> is returned instead of default 0'
complete -c cppcheck -l errorlist -d 'Print a list of all possible error messages in XML format'
complete -c cppcheck -l exitcode-suppressions -d 'Used when certain messages should be displayed but should not cause a non-zer…'
complete -c cppcheck -l file-list -d 'Specify the files to check in a text file.  One filename per line'
complete -c cppcheck -s f -l force -d 'Force checking of files that have a lot of configurations'
complete -c cppcheck -l fsigned-char -d 'Treat char type as signed'
complete -c cppcheck -l funsigned-char -d 'Treat char type as unsigned'
complete -c cppcheck -s h -l help -d 'Print help text'
complete -c cppcheck -s I -d 'Give path to search for include files'
complete -c cppcheck -l includes-file -d 'Specify directory paths to search for included header files in a text file'
complete -c cppcheck -l config-exclude -d 'Path (prefix) to be excluded from configuration checking'
complete -c cppcheck -l config-exclude-file -d 'A file that contains a list of config-excludes'
complete -c cppcheck -l include -d 'Force inclusion of a file before the checked file'
complete -c cppcheck -s i -d 'Give path to ignore.  Give several -i parameters to ignore several paths'
complete -c cppcheck -l inconclusive -d 'Allow that Cppcheck reports even though the analysis is inconclusive'
complete -c cppcheck -l inline-suppr -d 'Enable inline suppressions'
complete -c cppcheck -s j -d 'Start <jobs> threads to do the checking work'
complete -c cppcheck -s l -d 'Specifies that no new threads should be started if there are other threads ru…'
complete -c cppcheck -l language -d 'Forces cppcheck to check all files as the given language'
complete -c cppcheck -l library -d 'Use library configuration'
complete -c cppcheck -l max-configs -d 'Maximum number of configurations to check in a file before skipping it'
complete -c cppcheck -l max-ctu-depth -d 'Maximum depth in whole program analysis.  Default is 2'
complete -c cppcheck -s q -l quiet -d 'Only print something when there is an error'
complete -c cppcheck -o rp -o rp -l 'relative-paths;' -l relative-paths -d 'Use relative paths in output.  When given, <paths> are used as base'
complete -c cppcheck -l report-progress -d 'Report progress when checking a file'
complete -c cppcheck -l rule -d 'Match regular expression to create your own checks.  E. g'
complete -c cppcheck -l rule-file -d 'Use given rule XML file.  See https://sourceforge'
complete -c cppcheck -l suppress -d 'Suppress a specific warning'
complete -c cppcheck -l suppressions-list -d 'Suppress warnings listed in the file'
complete -c cppcheck -l suppress-xml -d 'Use suppressions defined in xml as described in the manual'
complete -c cppcheck -l template -d 'Format the error messages.  E. g'
complete -c cppcheck -s v -l verbose -d 'More detailed error reports'
complete -c cppcheck -l version -d 'Print out version information'
complete -c cppcheck -l xml -d 'Write results in XML to error stream'
complete -c cppcheck -l xml-version -d 'Select the XML file version.  Also implies --xml'
complete -c cppcheck -l enable
complete -c cppcheck -l platform
complete -c cppcheck -l showtime
complete -c cppcheck -l std

