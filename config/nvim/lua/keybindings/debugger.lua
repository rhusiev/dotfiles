KEYMAP("n", "zp", function()
	require("dap").toggle_breakpoint()
end, GET_OPTIONS("Debugger: Toggle break[p]oint"))
KEYMAP("n", "zc", function()
	require("dap").set_breakpoint(vim.fn.input("Condition: "))
end, GET_OPTIONS("Debugger: Set [c]onditional breakpoint"))
KEYMAP("n", "zl", function()
	require("dap").set_breakpoint(nil, nil, vim.fn.input("Log: "))
end, GET_OPTIONS("Debugger: Set [l]og point"))

KEYMAP({ "n", "v" }, "ze", function()
	require("dap.ui.widgets").hover()
end, GET_OPTIONS("Debugger: [e]valuate what is under the cursor"))

KEYMAP("n", "zC", function()
    require("dapui").close()
end, GET_OPTIONS("Debugger: [C]lose UI"))
KEYMAP("n", "zO", function()
    require("dapui").open()
end, GET_OPTIONS("Debugger: [O]pen UI"))

KEYMAP("n", "zs", function()
	require("dap").continue()
end, GET_OPTIONS("Debugger: [s]tart"))
KEYMAP("n", "zi", function()
	require("dap").step_into()
end, GET_OPTIONS("Debugger: step [i]nto"))
KEYMAP("n", "zo", function()
	require("dap").step_out()
end, GET_OPTIONS("Debugger: step [o]ut"))
KEYMAP("n", "zn", function()
	require("dap").step_over()
end, GET_OPTIONS("Debugger: step [n]ext"))
KEYMAP("n", "zb", function()
	require("dap").step_back()
end, GET_OPTIONS("Debugger: step [b]ack"))
KEYMAP("n", "zt", function()
	require("dap").terminate()
end, GET_OPTIONS("Debugger: [t]erminate"))
